name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./real-mail

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './real-mail/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests (Vitest)
        run: npm run test
        env:
          VITEST: true

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Start dev server
        run: npm run dev &
        env:
          NODE_ENV: development

      - name: Wait for server to be ready
        run: |
          timeout 60s bash -c 'until curl -f http://localhost:3001; do sleep 2; done'

      - name: Run E2E tests (Playwright)
        run: npx playwright test e2e
        env:
          NODE_ENV: test

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: ./real-mail/playwright-report/
          retention-days: 30

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel (Preview)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./real-mail
          scope: ${{ secrets.VERCEL_ORG_ID }}

  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel (Production)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./real-mail
          scope: ${{ secrets.VERCEL_ORG_ID }}

  notify-failure:
    name: Notify on Failure
    runs-on: ubuntu-latest
    needs: [test, deploy-preview, deploy-production]
    if: failure()
    
    steps:
      - name: Notify failure
        run: |
          echo "🚨 CI/CD 파이프라인 실패!"
          echo "- 테스트 실패 또는 배포 실패가 발생했습니다."
          echo "- 로그를 확인하고 문제를 해결한 후 다시 시도해주세요." 